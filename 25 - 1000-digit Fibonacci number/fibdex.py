import time

# I had just been playing around with finding fibonacci numbers earlier
# today before I even was aware that it would be the next problem.
# All I needed to do was change the code around to find by length of
# the found number and the problem was done. 

def iter_fib(digits):
    a=0
    b=1
    count=0
    #print b
    while len(str(a))<digits:    
        b,a=a,a+b
        count+=1
    print a
    return count


start=time.time()
print iter_fib(1000)

end=time.time()
print "Time elapsed for iterative fibonacci sequence - %r secs"%(
            end-start)

# runs a lot faster than I thought it would
"""
#The Number
10700662663827589367649805844573968850836838966321516650132352033753145
20604694040621889147582489792657804694888177591957484336466672569959512
99603046126274809248218614406943305123477444275027378175308757939166619
21492591867595539664228371489431130746995034395470019854326097230672901
92870526447243726117715821825548491120525013201478612965931381792235559
65745203950613755146783754322911960212993404826070617539770684706820289
54869026661854351245219003694806413574474709117076197669456910700980243
93439617474103736912503231365532164773697023167755051595173518460579954
91941096777837322966579658164651390348815425631018422419025984608800011
01862555502454939371136516570394476295847145485234259504285824253060835
44435428212611008992863795048006894330309773217834864543113205765659868
45628861680871869383529735064398629764066000072356291790520705116407761
48124918858309459405666883391093509444565763576661516193177537928916615
81327159616877487983821820492520348473874384736771934512787029218636250
627816
#The index
4782
#Time lapsed
Time elapsed for iterative fibonacci sequence - 0.04848313331604004 secs
"""
